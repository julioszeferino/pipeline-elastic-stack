input {
  http {
    id => "dados_sensores_http_input"
    user => "dados_sensores"
    password => "dados_sensores"
  }
}

filter {
  jdbc_streaming {
    jdbc_driver_library => "/opt/mysql/mysql-connector-java-5.1.49.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://metadata:3306/fabrica_db"
    jdbc_user => "elastic"
    jdbc_password => "elastic"
    statement => "select b.tipo_sensor, c.cliente, c.departmento, c.nome_edificio, c.sala, c.andar, c.latitude, c.longitude from tb_sensores a inner join tb_tipo_sensor b on a.tipo_sensor_id = b.tipo_sensor_id inner join tb_localidade c on a.localidade_id = c.localidade_id where a.sensor_id = :sensor_identifier"
    parameters => { "sensor_identifier" => "sensor_id"}
    target => lookupResult
  }

  mutate {
    rename => {"[lookupResult][0][tipoSensor]" => "tipoSensor"}
    rename => {"[lookupResult][0][cliente]" => "cliente"}
    rename => {"[lookupResult][0][departmento]" => "departmento"}
    rename => {"[lookupResult][0][nomeEdificio]" => "NomeEdificio"}
    rename => {"[lookupResult][0][sala]" => "sala"}
    rename => {"[lookupResult][0][andar]" => "andar"}
    rename => {"[lookupResult][0][localidadeAndar]" => "localidadeAndar"}
    add_field => {
      "location" => "%{[lookupResult][0][latitude]},%{[lookupResult][0][longitude]}"
    }
    remove_field => ["lookupResult", "headers", "host"]
  }

}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "dados_sensores-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "elastic"
  }
}